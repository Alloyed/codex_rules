This rules engine will work similarly to Hearthstone, where you have some game state, you run update() until it didn't do anything, then you let the player take actions. Like HS (or like mtg?) most ideas of the board state will be found within themselves, rather than carried forward from a previous board state. So if your older brother has two step, the update() thing doesn't see your older brother as a 4/4, it sees it as a 2/2, then it gets +2/+2, blah blah. The only (?) exception to this is stuff that changes controllers... other than mind control?

Some stuff (like mind control or two step) has to modify another thing. For mind control, the thing that owns the modification can be the mind control card, but for two step, it can't be. So there should be some set of effects that are NOT cards and NOT abilities on cards, but which apply anyway. This is stuff like two step, rampant growth, death rites, and the part of Kidnapping that gives the unit back to the opponent.

Some stuff needs to care about an object or set of objects in the battlefield. This is stuff like two step, rampant growth, terras q, mind control. This stuff can maybe keep a "handle" to that object that will become invalid if the object leaves the battlefield, but not if it changes controllers. Each player's stuff in the battlefield can maybe be stored in a map from timestamp -> object, so to check whether a two-step partner exists, you would look up that "handle" in each player's battlefield. Then, if you didn't find it, the two step effect would end, or if you found both partners, they would both get +2/+2. The "handle" of an object that came into existance at time 87 could literally be {"field", 87}.

Some stuff cares about stuff in the trash (or trash-like zones) instead of in the battlefield. This is jail, pasternaak, graveyard, and probably something else. This stuff can use a similar system to the stuff that's in play.

In addition to knowing when a thing was created, we must also track when it changed ownership and when it hit max level, to determine whether it can attack and whether it can cast ultimates.

Some stuff replaces a zone change with something else, like jail or forecast or indestructible. Some other stuff happens right after a zone change, like the scavenger slot or graveyard or reteller of truths or giant panda. Obviously the first set of stuff has to happen first, and then the second set if there was still a zone change. Within the second set we have to enforce some sort of ordering too, since you should definitely do "Dies: This goes to some other zone after dying" before doing "Dies: Draw a card." So maybe these triggers have some numerical value representing their piority?? or maybe the code that runs after a thing dies just has EVERY death trigger in it?

Does stuff happen in the middle of other stuff? For example, does the Two Step buff cease to apply in the middle of the resolution of Temporal Distortion, if Temporal Distortion bounces a Two Stepped unit. If so, can the other unit die in the middle of the resolution of Temporal Distortion? This might matter if you TD to get an Inverse Power Ninja that would only be a 1/1 if your Two Stepped unit died.

There are a bunch of states where the user has to make a choice during the resolution of a thing. That's annoying. Some of them are carrion curse, any unit with obliterate, octavian, temporal distortion. So if we want a "stateless" server that just reads a serialized state IN THE MIDDLE OF TD and goes from there, there have to be states for all these things.

There also has to be some list of *upcoming* decisions. Like if you attack Blackhand Dozer with Cinderblast Dragon, you get (in some order) the free fire spell and to kill a thing because of blackhand dozer's trigger. So we have to have the player be in the "free fire spell" state with an upcoming "blackhand dozer kill a thing" state. If a new trigger happens due to the free fire spell, does that go before or after the "blackhand dozer kill a thing" trigger? Smoker obviously has to go before? Like if you target smoker with the fire spell, he has to get out of the way and not take the damage. So does everything go before, and we kind of have "a stack"?